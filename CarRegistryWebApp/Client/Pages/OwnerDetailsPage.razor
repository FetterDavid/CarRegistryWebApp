@page "/owner/{id:int}"
@using Model.Models
@using Client.Services
@inject IOwnerService OwnerService
@inject NavigationManager NavigationManager

<h3>Owner Details</h3>
@if (_owner == null)
{
    <h3>Loading...</h3>
}
else
{
    <EditForm Model="@_owner">
        <div>
            <label>Last Name</label>
            <InputText @bind-Value=_owner.LastName class="form-control" disabled />
        </div>
        <div>
            <label>First Name</label>
            <InputText @bind-Value=_owner.FirstName class="form-control" disabled />
        </div>
        <div>
            <label>Birth Date</label>
            <InputDate @bind-Value=_owner.BirthDate class="form-control" disabled />
        </div>
        <div>
            <table>
                <tr>
                    <td> <a href="owner/edit/@_owner.Id" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Edit</a></td>
                    <td> <button @onclick="() => HandleDeleteAsync(_owner.Id)" class="btn btn-danger btn-lg active" role="button" aria-pressed="true">Delete</button></td>
                </tr>
            </table>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private Owner _owner { get; set; }

    protected async override Task OnInitializedAsync()
    {
        _owner = await OwnerService.GetByIdAsync(Id);
    }

    private async Task HandleDeleteAsync(int id)
    {
        await OwnerService.DeleteAsync(id);
        NavigationManager.NavigateTo($"/owners");
    }
}
