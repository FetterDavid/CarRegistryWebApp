@page "/cars/select/{ownerId:int}"
@using Model.Models
@using Client.Services
@inject ICarService CarService;
@inject ICarOwnershipService CarOwnershipService;
@inject NavigationManager NavigationManager

<PageTitle>Cars</PageTitle>
<h3>Cars</h3>
@if (_cars == null)
{
    <h2>Loading...</h2>
}
else
{
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <td>Brand</td>
                <td>Type</td>
                <td>RegistrationNumber</td>
                <td>Production Date</td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            @foreach (Car car in _cars)
            {
                <tr>
                    <td>@car.Brand</td>
                    <td>@car.Type</td>
                    <td>@car.RegistrationNumber</td>
                    <td>@car.ProductionDate</td>
                    <td> <button @onclick="() => HandleSelectAsync(car.Id)" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Select</button> </td>
                </tr>
            }
        </tbody>
    </table>

}

@code {
    [Parameter]
    public int OwnerId { get; set; }
    private IEnumerable<Car>? _cars { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _cars = await CarService.GetAllAvailableAsync();
    }

    private async Task HandleSelectAsync(int id)
    {
        await CarOwnershipService.AddAsync(new CarOwnership { CarId = id, OwnerId = OwnerId });
        NavigationManager.NavigateTo($"/owner/{OwnerId}");
    }
}
