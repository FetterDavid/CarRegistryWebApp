@page "/owner/select/{carId:int}"
@using Client.Services
@using Model.DTOs
@using Model.Models
@inject IOwnerService OwnerService;
@inject ICarOwnershipService CarOwnershipService;
@inject NavigationManager NavigationManager;

<PageTitle>Owners</PageTitle>
@if (_owners == null)
{
    <h2>Loading...</h2>
}
else
{
    <Pagination TotaPagesQuantity="totalPageQuantity" CurrentPage="currentPage" Radius="2" SelectedPage="SelectedPage"></Pagination>
    <h3>Owners</h3>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <td>Last Name</td>
                <td>First Name</td>
                <td>Birth Date</td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            @foreach (Owner owner in _owners)
            {
                <tr>
                    <td>@owner.LastName</td>
                    <td>@owner.FirstName</td>
                    <td>@owner.BirthDate.ToString("yyyy-MM-dd")</td>
                    <td><button @onclick="() => HandleSelectAsync(owner.Id)" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Select</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public int CarId { get; set; }
    private IEnumerable<Owner>? _owners { get; set; }

    private int totalPageQuantity;
    private int currentPage = 1;

    protected override async Task OnInitializedAsync()
    {
        await LoadOwners();
    }

    private async Task SelectedPage(int page)
    {
        currentPage = page;
        await LoadOwners(page);
    }

    private async Task LoadOwners(int page = 1, int quantityPerPage = 10)
    {
        PaginationResult<Owner> res = await OwnerService.GetAllAsync(page, quantityPerPage);
        _owners = res.Data;
        totalPageQuantity = res.PageCount;
    }

    private async Task HandleSelectAsync(int id)
    {
        await CarOwnershipService.AddAsync(new CarOwnership { CarId = CarId, OwnerId = id });
        NavigationManager.NavigateTo($"/car/{CarId}");
    }
}
